{"version":3,"sources":["services/contactsApi.js","redux/contacts/contactsOperations.js","redux/contacts/contactsSelectors.js","components/Button/Button.style.js","components/Button/Button.js","components/Form/Form.style.js","components/Form/Form.js","components/Contacts/Contacts.style.js","components/Contacts/Contacts.js","redux/contacts/contactSlice.js","components/Filter/Filter.style.js","components/Filter/Filter.js","components/Section/Section.js","App.js","redux/store.js","index.js"],"names":["fetchContacts","a","axios","get","data","addContact","contact","post","dltContact","id","delete","defaults","baseURL","createAsyncThunk","_","rejectWithValue","contactsApi","contacts","message","addContacts","items","deleteContacts","getContacts","state","phoneBook","getFilter","filter","getVisibleContacts","createSelector","normalizedContacts","toLowerCase","name","includes","number","CustomButton","styled","button","Button","type","text","onClick","CustomForm","form","Input","input","Form","useState","setName","setNumber","useSelector","dispatch","useDispatch","nameInputId","shortid","generate","numInputId","reset","handleChange","e","currentTarget","value","onSubmit","preventDefault","nameInlist","find","numberInList","alert","htmlFor","placeholder","pattern","title","required","onChange","Container","div","ContactList","ul","Item","li","TextP","p","NameSpan","span","DelBtn","Contacts","map","contactsSlice","createSlice","initialState","isLoading","error","reducers","changeFilter","action","payload","extraReducers","fulfilled","pending","rejected","console","log","push","actions","Filter","target","Section","children","App","useEffect","className","length","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb540c59.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:4000';\n\n// json-server -p 4000 db.json\n// json-server --watch db.json\n\nexport async function fetchContacts() {\n  const { data } = await axios.get('/contacts');\n  return data;\n};\n\nexport async function addContact(contact) {\n  const { data } = await axios.post('/contacts', contact);\n  return data;\n};\n\n\nexport async function dltContact(id) {\n  await axios.delete(`/contacts/${id}`);\n  return id;\n};","import { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nimport * as contactsApi from '../../services/contactsApi';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const contacts = await contactsApi.fetchContacts();\r\n      return contacts;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nexport const addContacts = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async (contact, { rejectWithValue }) => {\r\n    try {\r\n      const items = await contactsApi.addContact(contact);\r\n      return items;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nexport const deleteContacts = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      await contactsApi.dltContact(id);\r\n      // console.log(id);\r\n\r\n      return id;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = (state) => state.phoneBook.contacts;\nexport const getIsLoading = state => state.phoneBook.isLoading;\nexport const getFilter = (state) => state.phoneBook.filter;\n\nexport const getVisibleContacts = createSelector([getContacts, getFilter], (contacts, filter) => {\n  const normalizedContacts = filter.toLowerCase();\n  return contacts.filter(\n    contact =>\n      contact.name.toLowerCase().includes(normalizedContacts) ||\n      contact.number.includes(filter),\n  );\n});\n","import styled from \"@emotion/styled\";\n\nexport const CustomButton = styled.button`\n  width: 150px;\n  height: 20px;\n  cursor: pointer;\n  background-color: green;\n  border-radius: 50px;\n`;\n","import React from \"react\";\nimport { CustomButton } from \"./Button.style\";\n\nfunction Button({ type, text, onClick }) {\n  return (\n    <CustomButton type={type} onClick={onClick}>\n      {text}\n    </CustomButton>\n  );\n}\n\nexport default Button;\n","import styled from \"@emotion/styled\";\n\nexport const CustomForm = styled.form`\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  border-style: dashed;\n  border-color: aqua;\n  outline-color: tomato;\n  margin-bottom: 15px;\n`;\n","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {addContacts} from \"../../redux/contacts/contactsOperations\";\nimport {getContacts} from \"../../redux/contacts/contactsSelectors\";\n\nimport Button from \"../Button/Button\";\nimport shortid from \"shortid\";\nimport { CustomForm, Input } from \"./Form.style\";\n\nfunction Form() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const nameInputId = shortid.generate();\n  const numInputId = shortid.generate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n     const nameInlist = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n    const numberInList = contacts.find(contact => contact.number === number);\n    if (nameInlist) {\n      alert(`'${name}' is already in your list`);\n      reset();\n      return;\n    }\n    if (numberInList) {\n      alert(`'${number}' is already in your list`);\n      reset();\n      return;\n    }\n    dispatch(addContacts({ name, number }));\n    alert((`'${name}' added to phonebook`));\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <CustomForm onSubmit={handleSubmit}>\n      <label htmlFor={nameInputId}>\n        <Input\n          id={nameInputId}\n          placeholder=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n      </label>\n      <label htmlFor={numInputId}>\n        <Input\n          id={numInputId}\n          placeholder=\"Tel\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n          value={number}\n        />\n      </label>\n      <Button text=\"Add contact\" type=\"submit\" />\n    </CustomForm>\n  );\n}\n\nexport default Form;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  border-style: dotted;\n  display: inline-block;\n  padding-left: 15px;\n  padding-right: 30px;\n`;\n\nexport const ContactList = styled.ul`\n  display: inline-block;\n  list-style-type: decimal;\n  font-size: x-large;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  margin-right: 15px;\n`;\n\nexport const TextP = styled.p`\n  font-size: x-large;\n  margin-right: 20px;\n`;\n\nexport const NameSpan = styled.span`\n  font-weight: bold;\n  font-family: sans-serif;\n`;\n\nexport const DelBtn = styled.button`\n  background-color: red;\n  border-radius: 45%;\n  width: 60px;\n  height: 30px;\n\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Container,\n  ContactList,\n  Item,\n  NameSpan,\n  TextP,\n  DelBtn,\n} from \"./Contacts.style\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {getVisibleContacts} from \"../../redux/contacts/contactsSelectors\";\nimport { deleteContacts } from \"../../redux/contacts/contactsOperations\";\n\nfunction Contacts() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n  // const onDeleteContact = (id) => dispatch(contactActions.deleteContact(id));\n\n  return (\n    <Container>\n      <ContactList>\n        {contacts.map(({ id, name, number }) => (\n          <Item key={id}>\n            <TextP>\n              <NameSpan>{name}</NameSpan>: {number}\n            </TextP>\n            <DelBtn type=\"button\" onClick={() => dispatch(deleteContacts(id))}>\n              Delete\n            </DelBtn>\n          </Item>\n        ))}\n      </ContactList>\n    </Container>\n  );\n}\n\nexport default Contacts;\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import {\r\n  addContacts,\r\n  deleteContacts,\r\n  fetchContacts,\r\n} from './contactsOperations';\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst contactsSlice = createSlice({\r\n  name: 'phoneBook',\r\n  initialState: {\r\n    contacts: [],\r\n    isLoading: false,\r\n    filter: '',\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    changeFilter: (state, action) => {\r\n      state.filter = action.payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [fetchContacts.fulfilled](state, action) {\r\n      state.contacts = action.payload;\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n    [fetchContacts.pending](state) {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    [fetchContacts.rejected](state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n      console.log(action.payload);\r\n    },\r\n\r\n    [addContacts.fulfilled](state, action) {\r\n      state.contacts.push(action.payload);\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n    [addContacts.pending](state) {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    [addContacts.rejected](state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n      console.log(action.payload);\r\n    },\r\n\r\n    [deleteContacts.fulfilled](state, action) {\r\n      state.contacts = state.contacts.filter(\r\n        contact => contact.id !== action.payload,\r\n      );\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n    [deleteContacts.pending](state) {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    [deleteContacts.rejected](state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n      console.log(action.payload);\r\n    },\r\n  },\r\n});\r\nexport default contactsSlice.reducer;\r\nexport const { changeFilter } = contactsSlice.actions;","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  margin-bottom: 15px;\n`;\n\nexport const TextP = styled.p`\n  margin-top: 0px;\n  margin-bottom: 0px;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { changeFilter } from \"../../redux/contacts/contactSlice\";\nimport {getFilter} from \"../../redux/contacts/contactsSelectors\";\nimport { Container, TextP } from \"./Filter.style\";\n\nfunction Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <Container>\n      <TextP>Find contacts by name</TextP>\n      <input\n        placeholder=\"Search\"\n        type=\"text\"\n        value={value}\n        onChange={(e) => dispatch(changeFilter(e.target.value))}\n      />\n    </Container>\n  );\n}\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Section({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import Form from \"./components/Form/Form\";\nimport Contacts from \"./components/Contacts/Contacts\";\nimport Filter from \"./components/Filter/Filter\";\nimport Section from \"./components/Section/Section\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport {getContacts } from './redux/contacts/contactsSelectors';\nimport { fetchContacts} from './redux/contacts/contactsOperations';\n\nimport \"./App.css\";\nimport { useEffect } from \"react\";\n\nfunction App() {\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className=\"mainContainer\">\n      <Section title=\"Phonebook\">\n        <Form />\n      </Section>\n      {contacts.length > 0 && (\n        <Section title=\"Contacts\">\n          <Filter />\n          <Contacts />\n        </Section>)}      \n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport contactsSlice  from './contacts/contactSlice';\n\n\nconst store = configureStore({\n  reducer: {\n    phoneBook: contactsSlice,    \n  },devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default  store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n// import { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistore}> */}\n        <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}